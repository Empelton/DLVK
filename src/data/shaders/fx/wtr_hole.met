//new
using settemplates;
using engineflags;

template
{

    templatebody()
    {
		platform("*", "none; instancing");

        tech("wtr_hole")
        {
            Cull(NONE);
            DepthFunc(LEQUAL, FALSE);
        

            Input I_POS_MS = new InputFloat4("POSITION");        
            Output O_CLR = new OutputFLOAT4("COLOR0");              
			
			StencilOp(STENCIL_KEEP, STENCIL_KEEP, STENCIL_REPLACE);
			StencilFunc(ALWAYS, 66, 255);
			StencilWriteMask(66);
			StencilEnable(TRUE);
			
            VertexShader()
            {
				use Instancing();
                hlsl()
                {
                    #include <master_new.hlsl>

                    void main()
                    {
                        float4 pos_ms = Decode_Pos(I_POS_MS);

						float4 pos_ws = Mul_Pos(pos_ms, MODEL_XFORM_4x3);

						V_POS_OUT_TC = Pos_Out_WS(pos_ws);               
                    }
                }

            }

            PixelShader()
            {
                hlsl()
                {
                    #include <master_new.hlsl>

                    void main()
                    {                       
                        O_CLR = SwizzleXXXX(0.0);               
                    }
                }
            }
        }
    }
}


